{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample RESTful API in Golang.",
        "version": "0.1.0",
        "title": "Sample API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "douglascarlini@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost",
    "basePath": "/v1",
    "tags": [
        {
            "name": "app",
            "description": "Operations about apps"
        },
        {
            "name": "role",
            "description": "Operations about roles"
        },
        {
            "name": "domain",
            "description": "Operations about domains"
        },
        {
            "name": "module",
            "description": "Operations about modules"
        },
        {
            "name": "action",
            "description": "Operations about actions"
        },
        {
            "name": "user",
            "description": "Operations about users"
        },
        {
            "name": "auth",
            "description": "Operations about auth"
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/domains/{id}": {
            "get": {
                "tags": [
                    "domain"
                ],
                "summary": "Get object by ID",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "domain"
                ],
                "summary": "Updated object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Invalid object supplied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "domain"
                ],
                "summary": "Delete object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/domains": {
            "post": {
                "tags": [
                    "domain"
                ],
                "summary": "Create object",
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "scheme": {
                            "$ref": "#/definitions/ID"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "domain"
                ],
                "summary": "Get object list",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "scheme": {
                        "$ref": "#/definitions/ResponseList"
                    }
                }
            }
        },
        "/modules/{id}": {
            "get": {
                "tags": [
                    "module"
                ],
                "summary": "Get object by ID",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Module"
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "module"
                ],
                "summary": "Updated object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Module"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Invalid object supplied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "module"
                ],
                "summary": "Delete object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/modules": {
            "post": {
                "tags": [
                    "module"
                ],
                "summary": "Create object",
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Module"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "scheme": {
                            "$ref": "#/definitions/ID"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "module"
                ],
                "summary": "Get object list",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "scheme": {
                        "$ref": "#/definitions/ResponseList"
                    }
                }
            }
        },
        "/actions/{id}": {
            "get": {
                "tags": [
                    "action"
                ],
                "summary": "Get object by ID",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "action"
                ],
                "summary": "Updated object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Invalid object supplied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "action"
                ],
                "summary": "Delete object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/actions": {
            "post": {
                "tags": [
                    "action"
                ],
                "summary": "Create object",
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "scheme": {
                            "$ref": "#/definitions/ID"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "action"
                ],
                "summary": "Get object list",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "scheme": {
                        "$ref": "#/definitions/ResponseList"
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "tags": [
                    "role"
                ],
                "summary": "Get object by ID",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    },
                    "404": {
                        "description": "Item not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "role"
                ],
                "summary": "Updated object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Invalid object supplied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "role"
                ],
                "summary": "Delete object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/roles": {
            "post": {
                "tags": [
                    "role"
                ],
                "summary": "Create object",
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "scheme": {
                            "$ref": "#/definitions/ID"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "role"
                ],
                "summary": "Get object list",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "scheme": {
                        "$ref": "#/definitions/ResponseList"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "scheme": {
                            "$ref": "#/definitions/ID"
                        }
                    },
                    "409": {
                        "description": "username already taken"
                    }
                }
            },
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user list",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "scheme": {
                        "$ref": "#/definitions/ResponseList"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by ID",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "400": {
                        "description": "Invalid User supplied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/apps": {
            "post": {
                "tags": [
                    "app"
                ],
                "summary": "Create app",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "scheme": {
                            "$ref": "#/definitions/ID"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "app"
                ],
                "summary": "Get object list",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "scheme": {
                        "$ref": "#/definitions/ResponseList"
                    }
                }
            }
        },
        "/apps/{id}/renew": {
            "patch": {
                "tags": [
                    "app"
                ],
                "summary": "Renew app secret",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be renewed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Invalid object supplied"
                    }
                }
            }
        },
        "/apps/{id}": {
            "get": {
                "tags": [
                    "app"
                ],
                "summary": "Get object by ID",
                "description": "",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "app"
                ],
                "summary": "Updated object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Invalid object supplied"
                    }
                }
            },
            "delete": {
                "tags": [
                    "app"
                ],
                "summary": "Delete object by ID",
                "description": "This can only be done by the logged in user.",
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Login"
                        }
                    },
                    {
                        "in": "header",
                        "name": "key",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "headers": {
                            "X-Expires-After": {
                                "type": "string",
                                "format": "date-time",
                                "description": "date in UTC when token expires"
                            },
                            "X-Rate-Limit": {
                                "type": "integer",
                                "format": "int32",
                                "description": "calls per hour allowed by the user"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT authorization header using the Bearer scheme. Example: Bearer {token}"
        }
    },
    "definitions": {
        "ResponseList": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer",
                    "format": "int32"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "ID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "Token": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "Login": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "App": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                }
            }
        },
        "Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "Domain": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "Module": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "Action": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Haim",
        "url": "http://swagger.io"
    }
}